{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginPage.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","helpers/calendar-espanol.js","components/ui/AddNewButton.js","components/ui/DeleteButton.js","components/calendar/CalendarPage.js","routers/PrivateRouter.js","routers/PublicRouter.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","CalendarioApp.js","index.js"],"names":["baseURL","process","noTokenFetch","endpoint","data","method","url","fetch","headers","body","JSON","stringify","tokenFetch","token","localStorage","getItem","types","prepareEvents","events","map","ev","end","moment","toDate","start","setLoadEvents","type","payload","addNewEvent","event","clearActiveEvent","deleteEvent","updateEvent","startLogOut","dispatch","clear","logout","login","user","checkingFinish","useForm","initialState","useState","value","setValue","reset","newState","handleInputChange","target","name","valor","actualValue","a","prevState","state","LoginPage","useDispatch","loginMail","loginPassword","registerMail","registerName","registerPassword","registerPassword2","registerValue","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","resp","json","exito","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","auth","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","oneMoreHour","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","startDate","setStartDate","endDate","setEndDate","formValue","setFormValue","handleChange","valid","setValid","closeModal","useEffect","isOpen","onRequestClose","closeTimeoutMS","style","overlayClassName","update","momentStart","momentEnd","isAfter","console","log","trim","length","id","getState","_id","selected","minDate","autoComplete","rows","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","AddNewButton","zIndex","DeleteButton","locale","localizer","momentLocalizer","CalendarPage","lastView","setLastView","eventos","startAccessor","endAccessor","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","PrivateRouter","isAuth","Component","component","rest","props","to","PublicRouter","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarioApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f993aae6.chunk.js","sourcesContent":["const baseURL = process.env.REACT_APP_API_URL;\r\n\r\nexport const noTokenFetch = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${baseURL}/${endpoint}`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        } );\r\n    }\r\n \r\n}\r\n\r\nexport const tokenFetch = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${baseURL}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        } );\r\n    }\r\n \r\n}","export const types = {\r\n\r\n    //ABRIR Y CERRAR EL MODAL\r\n    uiOpenModal: '[UI] Open modal',\r\n    uiCloseModal: '[UI] Close modal',\r\n\r\n    //ACCIONES PARA CALENDARIO\r\n    setActiveEvent: '[CALENDAR] set active',\r\n    eventStartAddNew:'[CALENDAR] start adding new event',\r\n    addNewEvent: '[CALENDAR] add new event',\r\n    clearActiveEvent:'[CALENDAR] clear active event',\r\n    updateEvent: '[CALENDAR] update event',\r\n    deleteEvent: '[CALENDAR] delete event',\r\n    setLoadEvents: '[CALENDAR] set loaded events to store',\r\n\r\n    //ACCIONES PARA AUTORIZACIÓN\r\n    authChecking:'[AUTH] checking login state',\r\n    authCheckingFinish:'[AUTH] finish checking login state',\r\n    authStartLogin:'[AUTH] start login',\r\n    authLogin:'[AUTH] login',\r\n    authStartRegister:'[AUTH] start register',\r\n    authStartTokenRenew:'[AUTH] start token renew',\r\n    authLogOut:'[AUTH] logout',\r\n\r\n    //Eliminación de eventos\r\n    logOutDelete:'[CALENDAR] delete all events',\r\n}","import moment from \"moment\";\r\n\r\nexport const prepareEvents = (events = []) =>{\r\n    return events.map( ev => ({\r\n        ...ev, \r\n        end: moment( ev.end ).toDate(),\r\n        start: moment( ev.start ).toDate() ,\r\n    })); \r\n}","import Swal from \"sweetalert2\";\r\nimport { tokenFetch } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nexport const startAddNewEvent = (event) => {\r\n    return async(dispatch, getState) => {\r\n        //console.log('prbando',event);\r\n\r\n        const { name, uid } = getState().auth;\r\n\r\n        try {\r\n            const resp = await tokenFetch( 'event/create', event, 'POST' );\r\n            const body = await resp.json();\r\n\r\n            if(body.exito) {\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n                console.log(event)\r\n                dispatch(addNewEvent(event));\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const loadEvents = () => {\r\n    return async(dispatch) => {\r\n        \r\n        try {\r\n            const resp = await tokenFetch('event');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.eventos);\r\n            dispatch(setLoadEvents(events));\r\n        } catch (error) {\r\n            console.log('error', error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startUpdateEvent = update => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await tokenFetch(`event/${update.id}`, update, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if(body.exito) {\r\n                dispatch(updateEvent(update));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n                console.log(body.msg);\r\n            }\r\n\r\n            console.log(body);\r\n\r\n        } catch (error) {\r\n            console.log('error', error)\r\n            Swal('Error', 'No tiene permiso para actualizar el estado del evento', 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startDeleteEvent = () => {\r\n    return async(dispatch, getState) => {\r\n        const {id} = getState().calendar.activeEvent;\r\n        console.log('id', id);\r\n        try {\r\n            const resp = await tokenFetch(`event/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if(body.exito) {\r\n                dispatch(deleteEvent());\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n                console.log(body.msg);\r\n            }\r\n\r\n            console.log(body);\r\n            \r\n        } catch (error) {\r\n            console.log('error', error);\r\n            Swal.fire('Error', (error.msg || 'No se pudo eliminar'), 'error')\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst setLoadEvents = events => ({\r\n    type: types.setLoadEvents,\r\n    payload: events,\r\n})\r\n\r\nconst addNewEvent = (event) => ({\r\n    type: types.addNewEvent,\r\n    payload: event,\r\n});\r\n\r\nexport const setActiveEvent = (event) => ({\r\n    type: types.setActiveEvent, \r\n    payload: event,\r\n})\r\n\r\nexport const clearActiveEvent = () => ({\r\n    type: types.clearActiveEvent\r\n})\r\n\r\nexport const deleteEvent = () => ({\r\n    type: types.deleteEvent\r\n})\r\n\r\nexport const updateEvent = event => ({\r\n    type: types.updateEvent,\r\n    payload: event\r\n});\r\n\r\nexport const logOutDelete = () => ({\r\n    type:types.logOutDelete\r\n});","import Swal from \"sweetalert2\";\r\nimport { noTokenFetch, tokenFetch } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { logOutDelete } from \"./events\";\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await noTokenFetch('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if( body.exito ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-day', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await noTokenFetch('auth/new', { email, password, name }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if( body.exito ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-day', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        } \r\n    }\r\n}\r\n\r\nexport const startChecking = ( ) => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await tokenFetch('auth/renew');\r\n        const body = await resp.json();\r\n        //console.log('body', body)\r\n        if( body.exito ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-day', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        } \r\n    }\r\n}\r\n\r\nexport const startLogOut = () => {\r\n    return dispatch => {\r\n        localStorage.clear();\r\n        dispatch(logOutDelete())\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst login = user => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nconst logout = () => ({\r\n    type: types.authLogOut\r\n});","import { useState } from \"react\";\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [ value, setValue ] = useState( initialState );\r\n\r\n    const reset = ( newState = initialState ) => {\r\n        setValue( newState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        const { name, value:valor } = target;\r\n\r\n        setValue({\r\n            ...value,\r\n            [name]: valor\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n         * valor ACTUAL COMPROBADO DEL ESTADO, se cambia una vez se haya llamado asíncronamente al handleInputChange -> setValue \r\n         * setValue tarda un rato en establecer el cambio cuando se le llama, \r\n         * una vez procesado como se hace en el CustomHook, este debe ser esperado asíncronamente(await), así se obtiene el \r\n         * valor actualizado real del estado\r\n     */\r\n    const actualValue = async() => {\r\n        let state;\r\n\r\n        await setValue( (prevState) => {\r\n            state = prevState;\r\n            return state;\r\n        })\r\n\r\n        return state;\r\n    }\r\n\r\n    return [ value, handleInputChange, actualValue, reset ];\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ value, handleInputChange ] = useForm({\r\n        loginMail:'elpin1995@gmail.com',\r\n        loginPassword:'123123123',\r\n    });\r\n    \r\n    const [ registerValue, handleRegisterInputChange ] = useForm({\r\n        registerMail:'',\r\n        registerName:'',\r\n        registerPassword:'123123123',\r\n        registerPassword2:'123123123',\r\n    });\r\n\r\n    const { loginMail, loginPassword } = value;\r\n\r\n    const { registerMail, registerPassword, registerName, registerPassword2 } = registerValue\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        dispatch(startLogin(loginMail, loginPassword));\r\n        //console.log(value);\r\n    }\r\n\r\n    const handleRegister = e => {\r\n        e.preventDefault();\r\n\r\n        if(registerPassword !== registerPassword2 ){\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error'); \r\n        }\r\n\r\n        dispatch(startRegister( registerMail, registerPassword, registerName ));\r\n        //console.log(registerValue);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleSubmit }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='loginMail'\r\n                                value={ loginMail }\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='loginPassword'\r\n                                value={ loginPassword }\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name='registerName'\r\n                                value={ registerName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='registerMail'\r\n                                value={ registerMail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name='registerPassword'\r\n                                value={ registerPassword }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name='registerPassword2'\r\n                                value={ registerPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogOut } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch(startLogOut())\r\n    }\r\n\r\n    return (\r\n        <div className='navbar navbar-dark bg-dark mb-4 px-4'>\r\n            <span className='navbar-brand'>\r\n                { name }\r\n            </span>\r\n\r\n            <button \r\n                className='btn btn-outline-warning'\r\n                onClick={ handleClick }\r\n            >\r\n                <i className='fas fa-sign-out-alt'></i> \r\n                <span>Salir</span> \r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <h4> { title } </h4>\r\n            <p>- {user.name} </p>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import React, { useEffect, useState } from 'react';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport Modal from 'react-modal';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { \r\n    clearActiveEvent, \r\n    startAddNewEvent, \r\n    startUpdateEvent, \r\n} from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n/**Supongo que es de donde se va a tomar la referencia para aparecer el modal \r\n * justo encima de este elemento que es donde se renderiza toda la app\r\n */\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst oneMoreHour = now.clone().add(1,'hours');\r\n\r\nconst initEvent = {\r\n    title:'',\r\n    notes:'',\r\n    start:now.toDate(),\r\n    end:oneMoreHour.toDate(),\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n    const [startDate, setStartDate] = useState( now.toDate() )\r\n    const [endDate, setEndDate] = useState( oneMoreHour.toDate() )\r\n\r\n    const [formValue, setFormValue] = useState( initEvent );\r\n    \r\n    const { notes, title, start, end } = formValue;\r\n\r\n\r\n    const handleChange = ({target}) => {\r\n        setFormValue({\r\n            ...formValue,\r\n            [target.name] : target.value\r\n        })\r\n    }\r\n\r\n    \r\n    const startDateChange = (e) => {\r\n        console.log(e);\r\n        setStartDate(e)\r\n        setFormValue({\r\n            ...formValue,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const endDateChange = (e) => {\r\n        console.log(e);\r\n        setEndDate(e)\r\n        setFormValue({\r\n            ...formValue,\r\n            end: e\r\n        });\r\n    }\r\n\r\n    const [valid, setValid] = useState(true);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start)\r\n        const momentEnd = moment(end)\r\n\r\n        if(momentStart.isAfter(momentEnd)){\r\n            console.log('Tiene que ser mayor')\r\n            return Swal.fire('Error', 'La fecha de fin tiene que ser mayor a la fecha de inicio', 'error')\r\n        } \r\n        if( title.trim().length < 2 ) {\r\n            setValid(false)\r\n        }\r\n\r\n        if(activeEvent) {\r\n            dispatch(startUpdateEvent(formValue))\r\n        } else {\r\n            dispatch(startAddNewEvent(formValue));\r\n        }\r\n\r\n        \r\n\r\n        setValid(true)\r\n        closeModal();\r\n\r\n        //console.log(formValue,momentStart, momentEnd)\r\n    }\r\n\r\n    \r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(clearActiveEvent());\r\n        setFormValue(initEvent);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(activeEvent) {\r\n            setFormValue(activeEvent)\r\n        } else {\r\n            setFormValue(initEvent)\r\n        }\r\n\r\n    },[setFormValue,activeEvent]);\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            //onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            closeTimeoutMS={250}\r\n            style={customStyles}\r\n            className='modal'\r\n            overlayClassName='modal-fondo'\r\n        >\r\n            <h2> { activeEvent ? 'Editar evento' : 'Nuevo evento' } </h2>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleSubmit}>\r\n\r\n                <div className=\"form-group d-flex flex-column\">\r\n                    <label className='mb-1'>Fecha y hora inicio</label>\r\n                    <DatePicker\r\n                        className='form-control'\r\n                        value={ startDate }\r\n                        selected={ startDate }\r\n                        onChange={startDateChange} //only when value has changed\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group d-flex flex-column\">\r\n                    <label className='mb-1'>Fecha y hora fin</label>\r\n                    <DatePicker\r\n                        className='form-control'\r\n                        value={ endDate }\r\n                        selected={ endDate }\r\n                        minDate={ startDate}\r\n                        onChange={endDateChange} //only when value has changed\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!valid && 'is-invalid' }`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        value={title}\r\n                        onChange={handleChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group mt-4\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        value={notes}\r\n                        onChange={handleChange}\r\n                        name=\"notes\"\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-block btn-outline-primary mt-4\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewButton = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleAdd = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n    //console.log(process.env);\r\n    return (\r\n        <button \r\n            style={{zIndex:'10'}}\r\n            className='btn btn-primary fab'//flying action button\r\n            onClick={ handleAdd }\r\n        >\r\n            <i className='fas fa-plus'></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { startDeleteEvent } from '../../actions/events';\r\n\r\nexport const DeleteButton = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleteEvent());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            style={{zIndex:'10'}}\r\n            className='btn btn-danger fab-danger'\r\n            onClick={handleDelete}\r\n        >\r\n            <i className='fas fa-trash' ></i> \r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport { messages } from '../../helpers/calendar-espanol';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'; \r\nimport moment from 'moment';\r\n\r\nimport 'moment/locale/es'; //Configuración para cambio de idioma en moment \r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearActiveEvent, loadEvents, setActiveEvent } from '../../actions/events';\r\nimport { AddNewButton } from '../ui/AddNewButton';\r\nimport { DeleteButton } from '../ui/DeleteButton';\r\nmoment.locale('es');//cambio a español para cabezera de dias de la semana\r\n\r\n\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\n\r\nexport const CalendarPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar);     \r\n    const { uid } = useSelector(state => state.auth);     \r\n\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month')\r\n\r\n    const handleDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const handleSelect = (e) => {\r\n        console.log(e);\r\n        dispatch(setActiveEvent(e));\r\n    }\r\n\r\n    const handleViewChange = (e) => {\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(clearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (e, start, end, isSelected) => {\r\n        //console.log(e, start, end, isSelected)\r\n\r\n        const style = {\r\n            backgroundColor : (uid === e.user._id ? '#0608F0' : '455660'),\r\n            borderRadius : '0px',\r\n            opacity : 0.8,\r\n            display : 'block',\r\n            color: '#fff'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(loadEvents());\r\n    }, []);\r\n\r\n    return (\r\n        <div className='calendar-screen'>\r\n            <Navbar />\r\n            \r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                messages={messages}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                onDoubleClickEvent={ handleDoubleClick }\r\n                onSelectEvent={handleSelect}\r\n                onView={ handleViewChange }\r\n                view={ lastView }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={true}\r\n                eventPropGetter={ eventStyleGetter }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewButton />\r\n            { activeEvent && <DeleteButton /> }\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRouter = ({\r\n    isAuth, \r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => (\r\n                (isAuth)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to='/login' />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRouter.propTypes = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRouter = ({\r\n    isAuth, \r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => (\r\n                (!isAuth)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to='/' />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRouter.propTypes = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\n\r\nimport { LoginPage } from \"../components/auth/LoginPage\";\r\nimport { CalendarPage } from \"../components/calendar/CalendarPage\";\r\nimport { PrivateRouter } from \"./PrivateRouter\";\r\nimport { PublicRouter } from \"./PublicRouter\";\r\n\r\nexport default function AppRouter() {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    console.log(checking);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    },[ dispatch ]);\r\n\r\n    if(checking) {\r\n        return (<h3>Cargando...</h3>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRouter\r\n                        exact\r\n                        path='/login'\r\n                        component={ LoginPage }\r\n                        isAuth={ !!uid }\r\n                    />\r\n                    <PrivateRouter\r\n                        exact\r\n                        path='/'\r\n                        component={ CalendarPage }\r\n                        isAuth={ !!uid }\r\n                    />\r\n                    <Redirect to='/' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking:true,\r\n    uid:null,\r\n    name:null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking:false,\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state, \r\n                checking:false\r\n            }\r\n\r\n        case types.authLogOut:\r\n            return {\r\n                checking: false,\r\n                uid:null,\r\n                name:null\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n//import moment from 'moment';\r\n\r\n/**{\r\n        id: new Date().getTime(),\r\n        title:'Cumple',\r\n        start: moment().toDate(),\r\n        end: moment().add(2,'hours').toDate(),\r\n        bgcolor: '#f3f3f3',\r\n        user: {\r\n            _id:543,\r\n            name:'Momoy'\r\n        }\r\n    } */\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null,\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.setActiveEvent:\r\n            return {\r\n                ...state, \r\n                activeEvent:action.payload\r\n            }\r\n    \r\n        case types.addNewEvent:\r\n            return {\r\n                ...state,\r\n                events:[...state.events, action.payload]\r\n            }\r\n\r\n        case types.clearActiveEvent:\r\n            return {\r\n                ...state, \r\n                activeEvent: null\r\n            }\r\n\r\n        case types.updateEvent:\r\n            return {\r\n                ...state,\r\n                events: state.events.map( e => (e.id === action.payload.id) ? action.payload : e )\r\n            }\r\n            \r\n        case types.deleteEvent:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter( e => (e.id !== state.activeEvent.id)),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.setLoadEvents:\r\n            return {\r\n                ...state,\r\n                events:[...action.payload]\r\n            }\r\n\r\n        case types.logOutDelete:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n            };\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth:authReducer,\r\n})","import { applyMiddleware, compose, createStore } from 'redux'\r\nimport { rootReducer } from '../reducers/rootReducers'\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers( \r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport AppRouter from './routers/AppRouter';\r\nimport store from './store/store';\r\n\r\nimport './styles/styles.css';\r\n\r\nexport default function CalendarioApp() {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport CalendarioApp from './CalendarioApp';\n\nReactDOM.render(\n    <CalendarioApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}