{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginPage.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","actions/events.js","components/calendar/CalendarModal.js","helpers/calendar-espanol.js","components/ui/AddNewButton.js","components/ui/DeleteButton.js","components/calendar/CalendarPage.js","routers/PrivateRouter.js","routers/PublicRouter.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","CalendarioApp.js","index.js"],"names":["baseURL","process","noTokenFetch","endpoint","data","method","url","fetch","headers","body","JSON","stringify","tokenFetch","token","localStorage","getItem","types","login","user","type","payload","checkingFinish","logout","useForm","initialState","useState","value","setValue","reset","newState","handleInputChange","target","name","valor","actualValue","a","prevState","state","LoginPage","dispatch","useDispatch","loginMail","loginPassword","registerMail","registerName","registerPassword","registerPassword2","registerValue","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","resp","json","exito","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","auth","onClick","clear","CalendarEvent","event","title","uiOpenModal","clearActiveEvent","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","moment","minutes","seconds","add","oneMoreHour","clone","initEvent","notes","start","toDate","end","CalendarModal","modalOpen","ui","activeEvent","calendar","startDate","setStartDate","endDate","setEndDate","formValue","setFormValue","handleChange","valid","setValid","closeModal","useEffect","isOpen","onRequestClose","closeTimeoutMS","style","overlayClassName","momentStart","momentEnd","isAfter","console","log","trim","length","addNewEvent","id","_id","selected","minDate","autoComplete","rows","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","AddNewButton","zIndex","DeleteButton","locale","localizer","momentLocalizer","CalendarPage","events","lastView","setLastView","startAccessor","endAccessor","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","PrivateRouter","isAuth","Component","component","rest","props","to","PublicRouter","AppRouter","checking","exact","path","bgcolor","rootReducer","combineReducers","action","map","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarioApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d74e3b61.chunk.js","sourcesContent":["const baseURL = process.env.REACT_APP_API_URL;\r\n\r\nexport const noTokenFetch = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${baseURL}/${endpoint}`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        } );\r\n    }\r\n \r\n}\r\n\r\nexport const tokenFetch = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${baseURL}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        } );\r\n    }\r\n \r\n}","export const types = {\r\n\r\n    //ABRIR Y CERRAR EL MODAL\r\n    uiOpenModal: '[UI] Open modal',\r\n    uiCloseModal: '[UI] Close modal',\r\n\r\n    //ACCIONES PARA CALENDARIO\r\n    setActiveEvent: '[CALENDAR] set active',\r\n    addNewEvent: '[CALENDAR] add new event',\r\n    clearActiveEvent:'[CALENDAR] clear active event',\r\n    updateEvent: '[CALENDAR] update event',\r\n    deleteEvent: '[CALENDAR] delete event',\r\n\r\n    //ACCIONES PARA AUTORIZACIÓN\r\n    authChecking:'[AUTH] checking login state',\r\n    authCheckingFinish:'[AUTH] finish checking login state',\r\n    authStartLogin:'[AUTH] start login',\r\n    authLogin:'[AUTH] login',\r\n    authStartRegister:'[AUTH] start register',\r\n    authStartTokenRenew:'[AUTH] start token renew',\r\n    authLogOut:'[AUTH] logout',\r\n}","import Swal from \"sweetalert2\";\r\nimport { noTokenFetch, tokenFetch } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await noTokenFetch('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if( body.exito ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-day', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await noTokenFetch('auth/new', { email, password, name }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if( body.exito ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-day', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        } \r\n    }\r\n}\r\n\r\nexport const startChecking = ( ) => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await tokenFetch('auth/renew');\r\n        const body = await resp.json();\r\n        //console.log('body', body)\r\n        if( body.exito ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-day', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        } \r\n    }\r\n}\r\n\r\nexport const startLogOut = () => {\r\n    return dispatch => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst login = user => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nconst logout = () => ({\r\n    type: types.authLogOut\r\n});","import { useState } from \"react\";\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [ value, setValue ] = useState( initialState );\r\n\r\n    const reset = ( newState = initialState ) => {\r\n        setValue( newState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        const { name, value:valor } = target;\r\n\r\n        setValue({\r\n            ...value,\r\n            [name]: valor\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n         * valor ACTUAL COMPROBADO DEL ESTADO, se cambia una vez se haya llamado asíncronamente al handleInputChange -> setValue \r\n         * setValue tarda un rato en establecer el cambio cuando se le llama, \r\n         * una vez procesado como se hace en el CustomHook, este debe ser esperado asíncronamente(await), así se obtiene el \r\n         * valor actualizado real del estado\r\n     */\r\n    const actualValue = async() => {\r\n        let state;\r\n\r\n        await setValue( (prevState) => {\r\n            state = prevState;\r\n            return state;\r\n        })\r\n\r\n        return state;\r\n    }\r\n\r\n    return [ value, handleInputChange, actualValue, reset ];\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ value, handleInputChange ] = useForm({\r\n        loginMail:'elpin1995@gmail.com',\r\n        loginPassword:'123123123',\r\n    });\r\n    \r\n    const [ registerValue, handleRegisterInputChange ] = useForm({\r\n        registerMail:'',\r\n        registerName:'',\r\n        registerPassword:'123123123',\r\n        registerPassword2:'123123123',\r\n    });\r\n\r\n    const { loginMail, loginPassword } = value;\r\n\r\n    const { registerMail, registerPassword, registerName, registerPassword2 } = registerValue\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        dispatch(startLogin(loginMail, loginPassword));\r\n        //console.log(value);\r\n    }\r\n\r\n    const handleRegister = e => {\r\n        e.preventDefault();\r\n\r\n        if(registerPassword !== registerPassword2 ){\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error'); \r\n        }\r\n\r\n        dispatch(startRegister( registerMail, registerPassword, registerName ));\r\n        //console.log(registerValue);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleSubmit }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='loginMail'\r\n                                value={ loginMail }\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='loginPassword'\r\n                                value={ loginPassword }\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name='registerName'\r\n                                value={ registerName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='registerMail'\r\n                                value={ registerMail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name='registerPassword'\r\n                                value={ registerPassword }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name='registerPassword2'\r\n                                value={ registerPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogOut } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch(startLogOut())\r\n    }\r\n\r\n    return (\r\n        <div className='navbar navbar-dark bg-dark mb-4 px-4'>\r\n            <span className='navbar-brand'>\r\n                { name }\r\n            </span>\r\n\r\n            <button \r\n                className='btn btn-outline-warning'\r\n                onClick={ handleClick }\r\n            >\r\n                <i className='fas fa-sign-out-alt'></i> \r\n                <span>Salir</span> \r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <h4> { title } </h4>\r\n            <p>- {user.name} </p>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import { types } from \"../types/types\"\r\n\r\n\r\n\r\n\r\nexport const addNewEvent = (event) => ({\r\n    type: types.addNewEvent,\r\n    payload: event,\r\n});\r\n\r\nexport const setActiveEvent = (event) => ({\r\n    type: types.setActiveEvent, \r\n    payload: event,\r\n})\r\n\r\nexport const clearActiveEvent = () => ({\r\n    type: types.clearActiveEvent\r\n})\r\n\r\nexport const deleteEvent = () => ({\r\n    type: types.deleteEvent\r\n})\r\n\r\nexport const updateEvent = event => ({\r\n    type: types.updateEvent,\r\n    payload: event\r\n});","import React, { useEffect, useState } from 'react';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport Modal from 'react-modal';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNewEvent, clearActiveEvent, updateEvent } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n/**Supongo que es de donde se va a tomar la referencia para aparecer el modal \r\n * justo encima de este elemento que es donde se renderiza toda la app\r\n */\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst oneMoreHour = now.clone().add(1,'hours');\r\n\r\nconst initEvent = {\r\n    title:'',\r\n    notes:'',\r\n    start:now.toDate(),\r\n    end:oneMoreHour.toDate(),\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n    const [startDate, setStartDate] = useState( now.toDate() )\r\n    const [endDate, setEndDate] = useState( oneMoreHour.toDate() )\r\n\r\n    const [formValue, setFormValue] = useState( initEvent );\r\n    \r\n    const { notes, title, start, end } = formValue;\r\n\r\n\r\n    const handleChange = ({target}) => {\r\n        setFormValue({\r\n            ...formValue,\r\n            [target.name] : target.value\r\n        })\r\n    }\r\n\r\n    \r\n    const startDateChange = (e) => {\r\n        console.log(e);\r\n        setStartDate(e)\r\n        setFormValue({\r\n            ...formValue,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const endDateChange = (e) => {\r\n        console.log(e);\r\n        setEndDate(e)\r\n        setFormValue({\r\n            ...formValue,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const [valid, setValid] = useState(true)\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start)\r\n        const momentEnd = moment(end)\r\n\r\n        if(momentStart.isAfter(momentEnd)){\r\n            console.log('Tiene que ser mayor')\r\n            return Swal.fire('Error', 'La fecha de fin tiene que ser mayor a la fecha de inicio', 'error')\r\n        } \r\n        if( title.trim().length < 2 ) {\r\n            setValid(false)\r\n        }\r\n\r\n        if(activeEvent) {\r\n            dispatch(updateEvent(formValue))\r\n        } else {\r\n            dispatch(addNewEvent({\r\n                ...formValue,\r\n                id: new Date().getTime(),\r\n                user:{\r\n                    _id:'67vb324b',\r\n                    name:'Momoy'\r\n                }   \r\n            }));\r\n        }\r\n\r\n        \r\n\r\n        setValid(true)\r\n        closeModal();\r\n\r\n        console.log(formValue,momentStart, momentEnd)\r\n    }\r\n\r\n    \r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(clearActiveEvent());\r\n        setFormValue(initEvent);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(activeEvent) {\r\n            setFormValue(activeEvent)\r\n        } else {\r\n            setFormValue(initEvent)\r\n        }\r\n\r\n    },[setFormValue,activeEvent]);\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            //onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            closeTimeoutMS={250}\r\n            style={customStyles}\r\n            className='modal'\r\n            overlayClassName='modal-fondo'\r\n        >\r\n            <h2> { activeEvent ? 'Editar evento' : 'Nuevo evento' } </h2>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleSubmit}>\r\n\r\n                <div className=\"form-group d-flex flex-column\">\r\n                    <label className='mb-1'>Fecha y hora inicio</label>\r\n                    <DatePicker\r\n                        className='form-control'\r\n                        value={ startDate }\r\n                        selected={ startDate }\r\n                        onChange={startDateChange} //only when value has changed\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group d-flex flex-column\">\r\n                    <label className='mb-1'>Fecha y hora fin</label>\r\n                    <DatePicker\r\n                        className='form-control'\r\n                        value={ endDate }\r\n                        selected={ endDate }\r\n                        minDate={ startDate}\r\n                        onChange={endDateChange} //only when value has changed\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!valid && 'is-invalid' }`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        value={title}\r\n                        onChange={handleChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group mt-4\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        value={notes}\r\n                        onChange={handleChange}\r\n                        name=\"notes\"\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-block btn-outline-primary mt-4\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewButton = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleAdd = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n    //console.log(process.env);\r\n    return (\r\n        <button \r\n            style={{zIndex:'10'}}\r\n            className='btn btn-primary fab'//flying action button\r\n            onClick={ handleAdd }\r\n        >\r\n            <i className='fas fa-plus'></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteEvent } from '../../actions/events';\r\n\r\nexport const DeleteButton = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(deleteEvent());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className='btn btn-danger fab-danger'\r\n            onClick={handleDelete}\r\n        >\r\n            <i className='fas fa-trash' ></i> \r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport { messages } from '../../helpers/calendar-espanol';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'; \r\nimport moment from 'moment';\r\n\r\nimport 'moment/locale/es'; //Configuración para cambio de idioma en moment \r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearActiveEvent, setActiveEvent } from '../../actions/events';\r\nimport { AddNewButton } from '../ui/AddNewButton';\r\nimport { DeleteButton } from '../ui/DeleteButton';\r\nmoment.locale('es');//cambio a español para cabezera de dias de la semana\r\n\r\n\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\n\r\nexport const CalendarPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar)     \r\n\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month')\r\n\r\n    const handleDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const handleSelect = (e) => {\r\n        console.log(e);\r\n        dispatch(setActiveEvent(e));\r\n    }\r\n\r\n    const handleViewChange = (e) => {\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(clearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (e, start, end, isSelected) => {\r\n        //console.log(e, start, end, isSelected)\r\n\r\n        const style = {\r\n            backgroundColor : '#0608F0',\r\n            borderRadius : '0px',\r\n            opacity : 0.8,\r\n            display : 'block',\r\n            color: '#fff'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='calendar-screen'>\r\n            <Navbar />\r\n            \r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                messages={messages}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                onDoubleClickEvent={ handleDoubleClick }\r\n                onSelectEvent={handleSelect}\r\n                onView={ handleViewChange }\r\n                view={ lastView }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={true}\r\n                eventPropGetter={ eventStyleGetter }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewButton />\r\n            { activeEvent && <DeleteButton /> }\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRouter = ({\r\n    isAuth, \r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => (\r\n                (isAuth)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to='/login' />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRouter.propTypes = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRouter = ({\r\n    isAuth, \r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => (\r\n                (!isAuth)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to='/' />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRouter.propTypes = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\n\r\nimport { LoginPage } from \"../components/auth/LoginPage\";\r\nimport { CalendarPage } from \"../components/calendar/CalendarPage\";\r\nimport { PrivateRouter } from \"./PrivateRouter\";\r\nimport { PublicRouter } from \"./PublicRouter\";\r\n\r\nexport default function AppRouter() {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    console.log(checking);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    },[ dispatch ]);\r\n\r\n    if(checking) {\r\n        return (<h3>Cargando...</h3>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRouter\r\n                        exact\r\n                        path='/login'\r\n                        component={ LoginPage }\r\n                        isAuth={ !!uid }\r\n                    />\r\n                    <PrivateRouter\r\n                        exact\r\n                        path='/'\r\n                        component={ CalendarPage }\r\n                        isAuth={ !!uid }\r\n                    />\r\n                    <Redirect to='/' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking:true,\r\n    //uid:null,\r\n    //name:null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking:false,\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state, \r\n                checking:false\r\n            }\r\n\r\n        case types.authLogOut:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\nimport moment from 'moment';\r\n\r\nconst initialState = {\r\n    events: [{\r\n        id: new Date().getTime(),\r\n        title:'Cumple',\r\n        start: moment().toDate(),\r\n        end: moment().add(2,'hours').toDate(),\r\n        bgcolor: '#f3f3f3',\r\n        user: {\r\n            _id:543,\r\n            name:'Momoy'\r\n        }\r\n    }],\r\n    activeEvent: null,\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.setActiveEvent:\r\n            return {\r\n                ...state, \r\n                activeEvent:action.payload\r\n            }\r\n    \r\n        case types.addNewEvent:\r\n            return {\r\n                ...state,\r\n                events:[...state.events, action.payload]\r\n            }\r\n\r\n        case types.clearActiveEvent:\r\n            return {\r\n                ...state, \r\n                activeEvent: null\r\n            }\r\n\r\n        case types.updateEvent:\r\n            return {\r\n                ...state,\r\n                events: state.events.map( e => (e.id === action.payload.id) ? action.payload : e )\r\n            }\r\n            \r\n        case types.deleteEvent:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter( e => (e.id !== state.activeEvent.id)),\r\n                activeEvent: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n            };\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth:authReducer,\r\n})","import { applyMiddleware, compose, createStore } from 'redux'\r\nimport { rootReducer } from '../reducers/rootReducers'\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers( \r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport AppRouter from './routers/AppRouter';\r\nimport store from './store/store';\r\n\r\nimport './styles/styles.css';\r\n\r\nexport default function CalendarioApp() {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport CalendarioApp from './CalendarioApp';\n\nReactDOM.render(\n    <CalendarioApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}